# -*- coding: utf-8 -*-
"""Preprocessing Data.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1OKxP_6ufdKb8xPOHkxseWXVU20_DR_JH
"""

import numpy as np
import matplotlib.pyplot as plt
import pandas as pd

"""
Numpy merupakan Library Pyhton digunakan untuk komputasi matriks
Matplotlib merupakan Library Pyhton untuk presentasi data berupa grafik
Numpy merupakan Library Pyhton digunakan untuk komputasi matriks Matplotlib merupakan Library Pyhton untuk presentasi data berupa grafik"""

dataset = pd.read_csv('car_data.csv')
x = dataset.iloc[:,:-1].values
y = dataset.iloc[:,-1].values

print(x)

print(y)

from itertools import starmap
from sklearn.impute import SimpleImputer
imputer = SimpleImputer(missing_values=np.nan,strategy='mean')
imputer.fit(x[:,3:4])
x[:,3:4] = imputer.transform(x[:,3:4])

print(x)

"""ct adalah variabel yang digunakan untuk memanggil kolom transformes, dimana mengubah kolom transformers dari nominal ke bentuk matriks dengan cara di encoder dengan function onehotencoder

kemudian ubah format menjadi array menggunakan numpy array
"""

from sklearn.compose import ColumnTransformer
from sklearn.preprocessing import OneHotEncoder
ct = ColumnTransformer(transformers=[('encoder',OneHotEncoder(),[1])],remainder='passthrough')
x = np.array(ct.fit_transform(x))

print(x)

print(y)

from sklearn.model_selection import train_test_split
x_train, x_test, y_train, y_test = train_test_split (x,y, test_size=0.2, random_state=1)

print(x_train)

print(x_test)

print(y_train)

print(y_test)

from sklearn.preprocessing import StandardScaler
sc = StandardScaler()
x_train[:, 2:] = sc.fit_transform(x_train[:,2:])
x_test[:, 2:] = sc.fit_transform(x_test[:,2:])

print(x_train)

print(x_test)